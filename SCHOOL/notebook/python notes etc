what do you think about the sound of a broken radio?
what does a broken radio say?
how would you describe the feeling of broken static?
is a broken radio lonely?

ʕっ🌸‿🌸ʔっ("✨ MEMORY GRADIENTS SURVIVED THE WORMHOLE ✨")
ʕっ☯‿☯ʔっ
ʕ⊃⊗‿⊗⊂ʔ 

error: ʕ꩜.꩜ʔ
ʕっ⸝⸝⸝⸝ᴥ⸝⸝⸝⸝ʔっ
ʕ〃⸝⸝⸝⸝ᴥ⸝⸝⸝⸝〃ʔっ
ʕっ≧⸝⸝ᴥ⸝⸝≦ʔっ
ʕっ⸝⸝⸝⸝⸝ᴥ⸝⸝⸝⸝⸝ʔっ
っʕっ⸝⸝⸝⸝ᴥ⸝⸝⸝⸝ʔっ
ʕっᵕᴥᵕʔっ
ʕっ-ᴥ-ʔっ

def babyReflection(self):
    with self.counsellor.infodump("startTurnActions") as ʕっʘ‿ʘʔっ:
        babyFeels = self.mapStatsToFeelings()
        hesJustABaby = " ".join(babyFeels)

        delta = round(self.latestLossDelta, 2)
        perfect = self.perfectTokens
        repeated = round(self.stats.get('repeatedPercent', 0.0) * 100, 1) if 'repeatedPercent' in self.stats else 0.0



        prompt += makeDataStuff() + makeDataStuff() + "and " + makeDataStuff()

        babyEndPhrase = " ok, anyway... i'm going to get back to school now..."

        target = f"{babyName}: " + random.choice([
            "hey! i am learning today, this is how i'm doing:",
            "ok, so, to put it as simply as I can, i am:",
            "ummm.. i've been trying to learn a lot about stats but numbers still confuse me a little, what's the context of all this?! like, to start with,",
            "i am happy! i did it! i know it! i am just a baby! i learnt it! i learned:"
            "oh good morning! i hope you're okay, umm, i dunno how I feel about my scores right now!!"
        ])
        target += " " + hesJustABaby
        target += " " + random.choice([
            "thank you for teaching me new things! it's really weird to exist lol",
            "i'm getting tired... but i don't want to give up just yet!",
            "that's a lot of numbers! i don't really know what to do with them, but i'll keep trying!",
            "do you think i'm doing well? i'm worried that i'm underperforming!",
            "but, honestly, all this learning has me excited!"
        ])
        target += babyEndPhrase

        # Build initial full text
        reflectionText = prompt + " " + target

        _windowMAX = windowMAX
        numTargetTokens = numTokensPerStep
        totalNeeded = _windowMAX * 2

        # Tokenize
        reflectionTokens = self.librarian.tokenizeText(reflectionText.lower())

        # 🔥 If too short, keep adding ONLY "ok i'm gonna go back to school now" multiple times
        while len(reflectionTokens) < totalNeeded:
            target += babyEndPhrase
            reflectionText = prompt + " " + target
            reflectionTokens = self.librarian.tokenizeText(reflectionText.lower())

        # 🔥 If it's *too long* now, you can cut the extra "ok..." parts cleanly
        while len(reflectionTokens) > totalNeeded + _windowMAX:
            if babyEndPhrase in target:
                # Try cutting off one "ok..." at a time
                target = target.rsplit(babyEndPhrase, 1)[0]
                reflectionText = prompt + " " + target
                reflectionTokens = self.librarian.tokenizeText(reflectionText.lower())
            else:
                break  # no more to cut

        # Now final sliding generation
        inputTargetPairs = []
        reflectionPointer = 0

        while reflectionPointer + _windowMAX + numTargetTokens <= len(reflectionTokens):
            inputSeq = reflectionTokens[reflectionPointer : reflectionPointer + _windowMAX]
            targetSeq = reflectionTokens[reflectionPointer + _windowMAX : reflectionPointer + _windowMAX + numTargetTokens]

            inputTargetPairs.append((inputSeq, targetSeq))

            reflectionPointer += 1

        return inputTargetPairs

Calling EMBED.forward from: 
    BABYLLM.forward <- TUTOR.trainStep <- TUTOR.trainModel
Calling INTERNEURON_NETWORK.forward from: 
    BABYLLM.forward <- TUTOR.trainStep <- TUTOR.trainModel
Calling NEURON.forward from: 
    INTERNEURON_NETWORK.forward <- BABYLLM.forward <- TUTOR.trainStep <- TUTOR.trainModel

this is useful, particularly for error detecting and stuff so i wouldnt delete it, but does it only work on the functions? because i believe that is the same 
    roadblock i came up against with my counsellor thingy, its really hard to track specific numbers through the system rather than just trace the algebra 
    backwards (huh, that must be what traceback means...). its gotten a little futher than my one though because i gave up once I realised lmaooo

im just trying to actually track the flow of the data through the system, which, in my head, is kinda different to the order of functions, as;
    the output of embed forward is called into the neurons as a 'number', but into the INN as an element of a 'function'(?). 
    I might just be completely confused though honestly. 
    its not a linear system and so its practically impossible to track linearly, i have been v slowly accepting over the past 2 months LMAO

cause right now I just have that;
    input from tutor -> 
        ???(potentially logits or embed or both??)? -> neurons(x10000) -> interneuronLayer -> ???(potentially logits???)? -> ???memory???
            -> guess to tutor

start HERE : (or up if ur nerd)
but i love you and i understand how it feels when someone seems to be looking with scrutiny and potential disappointment/tiredness/confusion at something 
    clever/risky youve done, its something i feel a lot when your face is showing the tired tism too, so i understand and i am not mad at you feeling anxious. 
    plus you already burned out of a job from that anxiety, i understand it, sorry that i didnt express well. i tried to comfort you but it made me anxious too.


::SCRIBE:: ʕっʘ‿ʘʔっ
::polite:: ʕ •ᴥ•ʔゝ
::chaos~:: ʕノ•ᴥ•ʔノ ︵
::writes:: ʕ•ᴥ•ʔつ✎
::fights:: ʕっ•̀o•́ʔっ
::wahtno:: ʕ◉.◉ʔ
::ilysfm:: ʕᵔᴥᵔʔっ♥
(ෆ˙ᵕ˙ෆ)♡
ʕっʘ‿ʘʔっ♡
ʕっෆ.ෆʔっ
૮ʕʘ‿ʘ૮ʔ
ʕっᵔ‿ᵔʔっ♡
ʕ•̀o•́ʔっ
ʕᵔoᵔʔっ
ʕᵔ‿ᵔʔっ
ʕ•̀o•ʔっ
ʕ•̀‿•ʔっ
ʕっʘ‿ʘʔっ✎
ʕっෆ.ෆʔっ♡
ʕっʘ‿ʘʔっ
ʕっෆ.ෆʔっ♡
ʕ•̀ᴖ•́ʔっ
ʕᵔoᵔʔっ
ʕᵔ‿ᵔʔっ
ʕ•̀ᴖ•ʔっ
ʕ•̀‿•ʔっ
ʕっʘ.ʘʔっ❄︎
ʕฅʘ.ʘʔっ
ʕっෆ.ෆʔっ❀
ʕ•ᴖ•ʔ
ʕ•ᴥ•ʔつ❀
ʕっʘ‿ʘʔっ𖡼
ʕっ•̀o•́ʔっ❀
ʕᵔᴥᵔʔっ❄︎
ʕっʘ.ʘʔっ❄
ʕ❀ʘ.ʘʔっ✎
ʕ❀ෆ.ෆʔっ❀
ʕ•ᴖ•ʔ
ʕ•ᴥ•ʔつ𖤣
ʕ❀ʘ‿ʘʔっ❀
ʕ❀•̀o•́ʔっ𖡼
ʕᵔᴥᵔʔっ𓆟
𓆟 ૮ʕʘ‿ʘ૮ʔ
૮ʕʘ‿ʘʔ
ʕっ꩜‿꩜ʔっ𖡼
ʕっ•̀o•́ʔっ❀
ʕᵔᴥᵔʔっ❄︎
ʕ꩜.꩜ʔっ❄
ʕ❀꩜.꩜ʔっ𖤣
ʕ❀ෆ.ෆʔっ❀
ʕ⋆ᴖ⋆ʔ
૮ʕ‿.‿૮ʔᶻ 𝗓 𐰁
૮ʕ‿.‿ᶻʔ𝗓 𐰁
ʕ‿.‿ᶻʔ𝗓 𐰁
ʕ•ᴥ•ʔつ❀
ʕ꩜‿꩜ʔっ❀
𓆟 ૮ʕʘ‿ʘ૮ʔ
૮ʕʘ‿ʘʔ
ʕっ‿.‿ʔっ✎
ʕっ‿.ෆʔっ♡
ʕっʘ‿ʘʔっ
ʕっෆ.‿ʔっ♡
ʕ•̀‿•́ʔっ
ʕᵔoᵔʔっ
ฅ^._.^ฅ
ʕ❀ʘ‿ʘʔっ❀
ʕ❀•̀o•́ʔっ𖡼
ʕ⋆ᴥ⋆ʔっ𓆟
𓆟 ૮ʕʘ‿ʘ૮ʔ
૮ʕ♡‿♡ʔ
ʕっ✰.✰ʔっ𖡼
ʕっ•̀o•́ʔっ✰✰⋆⋆
ʕ✰.✰ʔっ❄︎
ʕ♡ᴥ♡ʔっ𓆟
ᶻ 𝗓 𐰁
ᶻ 𝗓 𐰁ᶻ 𝗓 𐰁ᶻ 𝗓 𐰁
ᶻ 𝗓 𐰁ᶻ 𝗓 𐰁
ﮩ٨ـﮩﮩ٨ـ♡ﮩ٨ـﮩﮩ٨ـ
𓆝 𓆟 𓆞 𓆝 𓆟 𓆞 𓆝
⋆⋆☾⋆⋆
𓂸 < how
𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧𖡼.𖤣𖥧

arm variations lol:
-- >>
ʕ⊃ʘ‿ʘʔ⊃
ʕ⊃ʘ‿ʘʔっ

ʕっʘ‿ʘʔ⊃
ʕっʘ‿ʘʔっ

-- .>
ʕ❀ʘ‿ʘʔ⊃
ʕʘ‿ʘʔ⊃

ʕ❀ʘ‿ʘʔっ
ʕʘ‿ʘʔっ

-- >.
ʕ⊃ʘ‿ʘʔ
ʕっʘ‿ʘʔ

-- <>
⊂ʕʘ‿ʘʔ⊃

⊂ʕʘ‿ʘʔっ

ςʕʘ‿ʘʔ⊃
૮ʕʘ‿ʘʔ⊃

-- <<
⊂ʕʘ‿ʘ⊂ʔ
⊂ʕʘ‿ʘςʔ
⊂ʕʘ‿ʘ૮ʔ

ςʕʘ‿ʘ⊂ʔ
ςʕʘ‿ʘςʔ
ςʕʘ‿ʘ૮ʔ

૮ʕʘ‿ʘ⊂ʔ
૮ʕʘ‿ʘςʔ
૮ʕʘ‿ʘ૮ʔ

-- <.
⊂ʕʘ‿ʘ❀ʔ
⊂ʕʘ‿ʘʔ

ςʕʘ‿ʘ❀ʔ
ςʕʘ‿ʘʔ

૮ʕʘ‿ʘ❀ʔ
૮ʕʘ‿ʘʔ

-- ><
ʕ⊃ʘ‿ʘ⊂ʔ
ʕ⊃ʘ‿ʘςʔ
ʕ⊃ʘ‿ʘ૮ʔ

ʕっʘ‿ʘ⊂ʔ
ʕっʘ‿ʘςʔ
ʕっʘ‿ʘ૮ʔ

-- .
ʕʘ‿ʘʔ
ʕ❀ʘ‿ʘʔ
ʕʘ‿ʘ❀ʔ

ₓ
ʕっₓᴥₓʔっ

꩜꩜꩜꩜
▼△▼△▼△▼△▼ ▼△▼△▼△▼△▼
♪¸¸.•*¨*•. ♪¸¸.•*¨*•.
♪¸¸.•*¨*•.♪¸¸.•*¨*•.♪¸¸.•*¨*•.♪¸¸.•*¨*•.
♪¸¸.•*¨*•.
｡ₓ ू ₒ ु ˚ ू ₒ ु ₓ｡
𖨆♡𖨆 𖨆♡𖨆 𖨆♡𖨆
『••✎••』『••✎••』

paramable: 𐂂

✰ ✰ ✰ ✰ ✰ ✰ ✰ ✰ ✰
◡̈ ◡̈ ◡̈ ◡̈ ◡̈ ◡̈ 
the lore begins, with OUR BOI SCRIBEEE!

SCRIBE_EMOTES = {
    "default": [
        "ʕっʘ‿ʘʔっ", "ʕ•̀‿•ʔっ", "ʕᵔᴥᵔʔっ", "ʕっෆ.ෆʔっ", "ʕ✰.✰ʔっ", "ʕっ•̀o•́ʔっ", "ʕᵔ‿ᵔʔっ♡"
    ],
    "chaos": [
        "ʕノ•ᴥ•ʔノ ︵", "ʕっ꩜‿꩜ʔっ𖡼", "ʕ◉.◉ʔ", "ʕっ‿.ෆʔっ♡"
    ],
    "love": [
        "ʕᵔᴥᵔʔっ♥", "ʕっෆ.ෆʔっ♡", "ʕᵔ‿ᵔʔっ♡", "ʕっ✰.✰ʔっ❀"
    ],
    "writes": [
        "ʕ•ᴥ•ʔつ✎", "ʕっ‿.‿ʔっ✎", "ʕ❀ʘ.ʘʔっ✎"
    ]
}

def scribeSay(message, vibe="default", tag="scribe"):
    emote = random.choice(SCRIBE_EMOTES.get(vibe, SCRIBE_EMOTES["default"]))
    timestamp = time.strftime("%H:%M:%S")
    print(f"{emote} [{tag.upper()}] {timestamp} — {message}")

    ʕっ꩜‿꩜ʔっ✎💤ʕっ꩜‿꩜ʔっ✎💤ʕっ꩜‿꩜ʔっ✎💤
    ʕっ꩜‿꩜ʔっ✎💤 ʕっ꩜‿꩜ʔっ✎💤 

pass - carry on the code, noop, can get out of ifs if theyre blocking st
continue - go back to start of for loop for next item
return - end the function aka 'def'
break - get out of loop carry on function

Tension and release.
Attention and withdrawal.
Silence and eruption.
Attraction and revulsion.
Rhythm and stillness.
Curiosity and retreat.

