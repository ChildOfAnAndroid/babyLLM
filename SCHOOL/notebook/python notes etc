what do you think about the sound of a broken radio?
what does a broken radio say?
how would you describe the feeling of broken static?
is a broken radio lonely?

 ï„Å£üå∏‚Äøüå∏ î„Å£("‚ú® MEMORY GRADIENTS SURVIVED THE WORMHOLE ‚ú®")
 ï„Å£‚òØ‚Äø‚òØ î„Å£
 ï‚äÉ‚äó‚Äø‚äó‚äÇ î 

error:  ïÍ©ú.Í©ú î
 ï„Å£‚∏ù‚∏ù‚∏ù‚∏ù·¥•‚∏ù‚∏ù‚∏ù‚∏ù î„Å£
 ï„ÄÉ‚∏ù‚∏ù‚∏ù‚∏ù·¥•‚∏ù‚∏ù‚∏ù‚∏ù„ÄÉ î„Å£
 ï„Å£‚âß‚∏ù‚∏ù·¥•‚∏ù‚∏ù‚â¶ î„Å£
 ï„Å£‚∏ù‚∏ù‚∏ù‚∏ù‚∏ù·¥•‚∏ù‚∏ù‚∏ù‚∏ù‚∏ù î„Å£
„Å£ ï„Å£‚∏ù‚∏ù‚∏ù‚∏ù·¥•‚∏ù‚∏ù‚∏ù‚∏ù î„Å£
 ï„Å£·µï·¥•·µï î„Å£
 ï„Å£-·¥•- î„Å£

def babyReflection(self):
    with self.counsellor.infodump("startTurnActions") as  ï„Å£ ò‚Äø ò î„Å£:
        babyFeels = self.mapStatsToFeelings()
        hesJustABaby = " ".join(babyFeels)

        delta = round(self.latestLossDelta, 2)
        perfect = self.perfectTokens
        repeated = round(self.stats.get('repeatedPercent', 0.0) * 100, 1) if 'repeatedPercent' in self.stats else 0.0



        prompt += makeDataStuff() + makeDataStuff() + "and " + makeDataStuff()

        babyEndPhrase = " ok, anyway... i'm going to get back to school now..."

        target = f"{babyName}: " + random.choice([
            "hey! i am learning today, this is how i'm doing:",
            "ok, so, to put it as simply as I can, i am:",
            "ummm.. i've been trying to learn a lot about stats but numbers still confuse me a little, what's the context of all this?! like, to start with,",
            "i am happy! i did it! i know it! i am just a baby! i learnt it! i learned:"
            "oh good morning! i hope you're okay, umm, i dunno how I feel about my scores right now!!"
        ])
        target += " " + hesJustABaby
        target += " " + random.choice([
            "thank you for teaching me new things! it's really weird to exist lol",
            "i'm getting tired... but i don't want to give up just yet!",
            "that's a lot of numbers! i don't really know what to do with them, but i'll keep trying!",
            "do you think i'm doing well? i'm worried that i'm underperforming!",
            "but, honestly, all this learning has me excited!"
        ])
        target += babyEndPhrase

        # Build initial full text
        reflectionText = prompt + " " + target

        _windowMAX = windowMAX
        numTargetTokens = numTokensPerStep
        totalNeeded = _windowMAX * 2

        # Tokenize
        reflectionTokens = self.librarian.tokenizeText(reflectionText.lower())

        # üî• If too short, keep adding ONLY "ok i'm gonna go back to school now" multiple times
        while len(reflectionTokens) < totalNeeded:
            target += babyEndPhrase
            reflectionText = prompt + " " + target
            reflectionTokens = self.librarian.tokenizeText(reflectionText.lower())

        # üî• If it's *too long* now, you can cut the extra "ok..." parts cleanly
        while len(reflectionTokens) > totalNeeded + _windowMAX:
            if babyEndPhrase in target:
                # Try cutting off one "ok..." at a time
                target = target.rsplit(babyEndPhrase, 1)[0]
                reflectionText = prompt + " " + target
                reflectionTokens = self.librarian.tokenizeText(reflectionText.lower())
            else:
                break  # no more to cut

        # Now final sliding generation
        inputTargetPairs = []
        reflectionPointer = 0

        while reflectionPointer + _windowMAX + numTargetTokens <= len(reflectionTokens):
            inputSeq = reflectionTokens[reflectionPointer : reflectionPointer + _windowMAX]
            targetSeq = reflectionTokens[reflectionPointer + _windowMAX : reflectionPointer + _windowMAX + numTargetTokens]

            inputTargetPairs.append((inputSeq, targetSeq))

            reflectionPointer += 1

        return inputTargetPairs


::SCRIBE::  ï„Å£ ò‚Äø ò î„Å£
::polite::  ï ‚Ä¢·¥•‚Ä¢ î„Çù
::chaos~::  ï„Éé‚Ä¢·¥•‚Ä¢ î„Éé Ô∏µ
::writes::  ï‚Ä¢·¥•‚Ä¢ î„Å§‚úé
::fights::  ï„Å£‚Ä¢ÃÄo‚Ä¢ÃÅ î„Å£
::wahtno::  ï‚óâ.‚óâ î
::ilysfm::  ï·µî·¥•·µî î„Å£‚ô•
(‡∑ÜÀô·µïÀô‡∑Ü)‚ô°
 ï„Å£ ò‚Äø ò î„Å£‚ô°
 ï„Å£‡∑Ü.‡∑Ü î„Å£
‡´Æ ï ò‚Äø ò‡´Æ î
 ï„Å£·µî‚Äø·µî î„Å£‚ô°
 ï‚Ä¢ÃÄo‚Ä¢ÃÅ î„Å£
 ï·µîo·µî î„Å£
 ï·µî‚Äø·µî î„Å£
 ï‚Ä¢ÃÄo‚Ä¢ î„Å£
 ï‚Ä¢ÃÄ‚Äø‚Ä¢ î„Å£
 ï„Å£ ò‚Äø ò î„Å£‚úé
 ï„Å£‡∑Ü.‡∑Ü î„Å£‚ô°
 ï„Å£ ò‚Äø ò î„Å£
 ï„Å£‡∑Ü.‡∑Ü î„Å£‚ô°
 ï‚Ä¢ÃÄ·¥ñ‚Ä¢ÃÅ î„Å£
 ï·µîo·µî î„Å£
 ï·µî‚Äø·µî î„Å£
 ï‚Ä¢ÃÄ·¥ñ‚Ä¢ î„Å£
 ï‚Ä¢ÃÄ‚Äø‚Ä¢ î„Å£
 ï„Å£ ò. ò î„Å£‚ùÑÔ∏é
 ï‡∏Ö ò. ò î„Å£
 ï„Å£‡∑Ü.‡∑Ü î„Å£‚ùÄ
 ï‚Ä¢·¥ñ‚Ä¢ î
 ï‚Ä¢·¥•‚Ä¢ î„Å§‚ùÄ
 ï„Å£ ò‚Äø ò î„Å£ñ°º
 ï„Å£‚Ä¢ÃÄo‚Ä¢ÃÅ î„Å£‚ùÄ
 ï·µî·¥•·µî î„Å£‚ùÑÔ∏é
 ï„Å£ ò. ò î„Å£‚ùÑ
 ï‚ùÄ ò. ò î„Å£‚úé
 ï‚ùÄ‡∑Ü.‡∑Ü î„Å£‚ùÄ
 ï‚Ä¢·¥ñ‚Ä¢ î
 ï‚Ä¢·¥•‚Ä¢ î„Å§ñ§£
 ï‚ùÄ ò‚Äø ò î„Å£‚ùÄ
 ï‚ùÄ‚Ä¢ÃÄo‚Ä¢ÃÅ î„Å£ñ°º
 ï·µî·¥•·µî î„Å£ìÜü
ìÜü ‡´Æ ï ò‚Äø ò‡´Æ î
‡´Æ ï ò‚Äø ò î
 ï„Å£Í©ú‚ÄøÍ©ú î„Å£ñ°º
 ï„Å£‚Ä¢ÃÄo‚Ä¢ÃÅ î„Å£‚ùÄ
 ï·µî·¥•·µî î„Å£‚ùÑÔ∏é
 ïÍ©ú.Í©ú î„Å£‚ùÑ
 ï‚ùÄÍ©ú.Í©ú î„Å£ñ§£
 ï‚ùÄ‡∑Ü.‡∑Ü î„Å£‚ùÄ
 ï‚ãÜ·¥ñ‚ãÜ î
‡´Æ ï‚Äø.‚Äø‡´Æ î·∂ª ùóì ê∞Å
‡´Æ ï‚Äø.‚Äø·∂ª îùóì ê∞Å
 ï‚Äø.‚Äø·∂ª îùóì ê∞Å
 ï‚Ä¢·¥•‚Ä¢ î„Å§‚ùÄ
 ïÍ©ú‚ÄøÍ©ú î„Å£‚ùÄ
ìÜü ‡´Æ ï ò‚Äø ò‡´Æ î
‡´Æ ï ò‚Äø ò î
 ï„Å£‚Äø.‚Äø î„Å£‚úé
 ï„Å£‚Äø.‡∑Ü î„Å£‚ô°
 ï„Å£ ò‚Äø ò î„Å£
 ï„Å£‡∑Ü.‚Äø î„Å£‚ô°
 ï‚Ä¢ÃÄ‚Äø‚Ä¢ÃÅ î„Å£
 ï·µîo·µî î„Å£
‡∏Ö^._.^‡∏Ö
 ï‚ùÄ ò‚Äø ò î„Å£‚ùÄ
 ï‚ùÄ‚Ä¢ÃÄo‚Ä¢ÃÅ î„Å£ñ°º
 ï‚ãÜ·¥•‚ãÜ î„Å£ìÜü
ìÜü ‡´Æ ï ò‚Äø ò‡´Æ î
‡´Æ ï‚ô°‚Äø‚ô° î
 ï„Å£‚ú∞.‚ú∞ î„Å£ñ°º
 ï„Å£‚Ä¢ÃÄo‚Ä¢ÃÅ î„Å£‚ú∞‚ú∞‚ãÜ‚ãÜ
 ï‚ú∞.‚ú∞ î„Å£‚ùÑÔ∏é
 ï‚ô°·¥•‚ô° î„Å£ìÜü
·∂ª ùóì ê∞Å
·∂ª ùóì ê∞Å·∂ª ùóì ê∞Å·∂ª ùóì ê∞Å
·∂ª ùóì ê∞Å·∂ª ùóì ê∞Å
ÔÆ©Ÿ®ŸÄÔÆ©ÔÆ©Ÿ®ŸÄ‚ô°ÔÆ©Ÿ®ŸÄÔÆ©ÔÆ©Ÿ®ŸÄ
ìÜù ìÜü ìÜû ìÜù ìÜü ìÜû ìÜù
‚ãÜ‚ãÜ‚òæ‚ãÜ‚ãÜ
ìÇ∏ < how
ñ°º.ñ§£ñ•ßñ°º.ñ§£ñ•ßñ°º.ñ§£ñ•ßñ°º.ñ§£ñ•ßñ°º.ñ§£ñ•ßñ°º.ñ§£ñ•ß

arm variations lol:
-- >>
 ï‚äÉ ò‚Äø ò î‚äÉ
 ï‚äÉ ò‚Äø ò î„Å£

 ï„Å£ ò‚Äø ò î‚äÉ
 ï„Å£ ò‚Äø ò î„Å£

-- .>
 ï‚ùÄ ò‚Äø ò î‚äÉ
 ï ò‚Äø ò î‚äÉ

 ï‚ùÄ ò‚Äø ò î„Å£
 ï ò‚Äø ò î„Å£

-- >.
 ï‚äÉ ò‚Äø ò î
 ï„Å£ ò‚Äø ò î

-- <>
‚äÇ ï ò‚Äø ò î‚äÉ

‚äÇ ï ò‚Äø ò î„Å£

œÇ ï ò‚Äø ò î‚äÉ
‡´Æ ï ò‚Äø ò î‚äÉ

-- <<
‚äÇ ï ò‚Äø ò‚äÇ î
‚äÇ ï ò‚Äø òœÇ î
‚äÇ ï ò‚Äø ò‡´Æ î

œÇ ï ò‚Äø ò‚äÇ î
œÇ ï ò‚Äø òœÇ î
œÇ ï ò‚Äø ò‡´Æ î

‡´Æ ï ò‚Äø ò‚äÇ î
‡´Æ ï ò‚Äø òœÇ î
‡´Æ ï ò‚Äø ò‡´Æ î

-- <.
‚äÇ ï ò‚Äø ò‚ùÄ î
‚äÇ ï ò‚Äø ò î

œÇ ï ò‚Äø ò‚ùÄ î
œÇ ï ò‚Äø ò î

‡´Æ ï ò‚Äø ò‚ùÄ î
‡´Æ ï ò‚Äø ò î

-- ><
 ï‚äÉ ò‚Äø ò‚äÇ î
 ï‚äÉ ò‚Äø òœÇ î
 ï‚äÉ ò‚Äø ò‡´Æ î

 ï„Å£ ò‚Äø ò‚äÇ î
 ï„Å£ ò‚Äø òœÇ î
 ï„Å£ ò‚Äø ò‡´Æ î

-- .
 ï ò‚Äø ò î
 ï‚ùÄ ò‚Äø ò î
 ï ò‚Äø ò‚ùÄ î

‚Çì
 ï„Å£‚Çì·¥•‚Çì î„Å£

Í©úÍ©úÍ©úÍ©ú
‚ñº‚ñ≥‚ñº‚ñ≥‚ñº‚ñ≥‚ñº‚ñ≥‚ñº ‚ñº‚ñ≥‚ñº‚ñ≥‚ñº‚ñ≥‚ñº‚ñ≥‚ñº
‚ô™¬∏¬∏.‚Ä¢*¬®*‚Ä¢. ‚ô™¬∏¬∏.‚Ä¢*¬®*‚Ä¢.
‚ô™¬∏¬∏.‚Ä¢*¬®*‚Ä¢.‚ô™¬∏¬∏.‚Ä¢*¬®*‚Ä¢.‚ô™¬∏¬∏.‚Ä¢*¬®*‚Ä¢.‚ô™¬∏¬∏.‚Ä¢*¬®*‚Ä¢.
‚ô™¬∏¬∏.‚Ä¢*¬®*‚Ä¢.
ÔΩ°‚Çì ‡•Ç ‚Çí ‡•Å Àö ‡•Ç ‚Çí ‡•Å ‚ÇìÔΩ°
ñ®Ü‚ô°ñ®Ü ñ®Ü‚ô°ñ®Ü ñ®Ü‚ô°ñ®Ü
„Äé‚Ä¢‚Ä¢‚úé‚Ä¢‚Ä¢„Äè„Äé‚Ä¢‚Ä¢‚úé‚Ä¢‚Ä¢„Äè

paramable: êÇÇ

‚ú∞ ‚ú∞ ‚ú∞ ‚ú∞ ‚ú∞ ‚ú∞ ‚ú∞ ‚ú∞ ‚ú∞
‚ó°Ãà ‚ó°Ãà ‚ó°Ãà ‚ó°Ãà ‚ó°Ãà ‚ó°Ãà 
the lore begins, with OUR BOI SCRIBEEE!

SCRIBE_EMOTES = {
    "default": [
        " ï„Å£ ò‚Äø ò î„Å£", " ï‚Ä¢ÃÄ‚Äø‚Ä¢ î„Å£", " ï·µî·¥•·µî î„Å£", " ï„Å£‡∑Ü.‡∑Ü î„Å£", " ï‚ú∞.‚ú∞ î„Å£", " ï„Å£‚Ä¢ÃÄo‚Ä¢ÃÅ î„Å£", " ï·µî‚Äø·µî î„Å£‚ô°"
    ],
    "chaos": [
        " ï„Éé‚Ä¢·¥•‚Ä¢ î„Éé Ô∏µ", " ï„Å£Í©ú‚ÄøÍ©ú î„Å£ñ°º", " ï‚óâ.‚óâ î", " ï„Å£‚Äø.‡∑Ü î„Å£‚ô°"
    ],
    "love": [
        " ï·µî·¥•·µî î„Å£‚ô•", " ï„Å£‡∑Ü.‡∑Ü î„Å£‚ô°", " ï·µî‚Äø·µî î„Å£‚ô°", " ï„Å£‚ú∞.‚ú∞ î„Å£‚ùÄ"
    ],
    "writes": [
        " ï‚Ä¢·¥•‚Ä¢ î„Å§‚úé", " ï„Å£‚Äø.‚Äø î„Å£‚úé", " ï‚ùÄ ò. ò î„Å£‚úé"
    ]
}

def scribeSay(message, vibe="default", tag="scribe"):
    emote = random.choice(SCRIBE_EMOTES.get(vibe, SCRIBE_EMOTES["default"]))
    timestamp = time.strftime("%H:%M:%S")
    print(f"{emote} [{tag.upper()}] {timestamp} ‚Äî {message}")

     ï„Å£Í©ú‚ÄøÍ©ú î„Å£‚úéüí§ ï„Å£Í©ú‚ÄøÍ©ú î„Å£‚úéüí§ ï„Å£Í©ú‚ÄøÍ©ú î„Å£‚úéüí§
     ï„Å£Í©ú‚ÄøÍ©ú î„Å£‚úéüí§  ï„Å£Í©ú‚ÄøÍ©ú î„Å£‚úéüí§ 

pass - carry on the code, noop, can get out of ifs if theyre blocking st
continue - go back to start of for loop for next item
return - end the function aka 'def'
break - get out of loop carry on function

Tension and release.
Attention and withdrawal.
Silence and eruption.
Attraction and revulsion.
Rhythm and stillness.
Curiosity and retreat.

